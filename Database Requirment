CREATE TABLE TBL_STOCK (
    Product_ID VARCHAR2(6) PRIMARY KEY,
    Product_Name VARCHAR2(20) UNIQUE,
    Quantity_On_Hand NUMBER CHECK (Quantity_On_Hand >= 0),
    Product_Unit_Price NUMBER CHECK (Product_Unit_Price >= 0),
    Reorder_Level NUMBER CHECK (Reorder_Level >= 0)
);


SELECT * FROM TBL_STOCK;
DESC TBL_STOCK;

CREATE TABLE TBL_SALES (
    Sales_ID VARCHAR2(6) PRIMARY KEY,
    Sales_Date DATE,
    Product_ID VARCHAR2(6),
    Quantity_Sold NUMBER CHECK (Quantity_Sold >= 0),
    Sales_Price_Per_Unit NUMBER CHECK (Sales_Price_Per_Unit >= 0),
    CONSTRAINT fk_product FOREIGN KEY (Product_ID) REFERENCES TBL_STOCK(Product_ID)
);


SELECT * FROM TBL_SALES;
DESC TBL_SALES;

INSERT INTO TBL_STOCK (Product_ID, Product_Name, Quantity_On_Hand, Product_Unit_Price, Reorder_Level)
VALUES ('RE1001', 'REDMI Note 3', 20, 12000, 5);

INSERT INTO TBL_STOCK (Product_ID, Product_Name, Quantity_On_Hand, Product_Unit_Price, Reorder_Level)
VALUES ('ip1002', 'Iphone 5S', 10, 21000, 2);

INSERT INTO TBL_STOCK (Product_ID, Product_Name, Quantity_On_Hand, Product_Unit_Price, Reorder_Level)
VALUES ('PA1003', 'Panasonic P55', 50, 5500, 5);

-- Create sequence for SEQ_SALES_ID
CREATE SEQUENCE SEQ_SALES_ID
    START WITH 1000
    INCREMENT BY 1;

-- Create sequence for SEQ_PRODUCT_ID
CREATE SEQUENCE SEQ_PRODUCT_ID
    START WITH 1004
    INCREMENT BY 1;


-- Create view V_SALES_REPORT
CREATE VIEW V_SALES_REPORT AS
SELECT S.Sales_ID,
       S.Sales_Date,
       S.Product_ID,
       ST.Product_Name,
       S.Quantity_Sold,
       ST.Product_Unit_Price,
       S.Sales_Price_Per_Unit,
       (S.Sales_Price_Per_Unit - ST.Product_Unit_Price) AS Profit_Amount
FROM TBL_SALES S
JOIN TBL_STOCK ST ON S.Product_ID = ST.Product_ID
ORDER BY Profit_Amount DESC, S.Sales_ID ASC;




